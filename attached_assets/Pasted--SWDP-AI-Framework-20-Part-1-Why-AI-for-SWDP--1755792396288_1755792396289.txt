



# 📖 SWDP AI Framework 발표 자료 (20슬라이드 아웃라인)

---

## Part 1. 문제 인식 (Why AI for SWDP?)

**Slide 1. Opening 질문**

* 헤드라인: “왜 지금, SWDP에 AI인가?”
* 카피: “AI 도입은 유행이 아니라, 우리가 겪고 있는 문제에서 출발합니다.”
* 비주얼: SWDP 로고를 향한 거대한 물음표

---

**Slide 2. 당연했던 불편**

* 헤드라인: “불편을 불편으로 인식하지 못하는 관성”
* 카피:

  * VOC 질문 반복
  * 수명업무(주간보고, 릴리즈 노트) 수작업
  * 복잡한 메뉴얼 검색
  * Jira에서 뽑아 다시 보고
* 메시지: “사람이 대신하던 일을 AI가 더 잘할 수 있습니다.”

---

**Slide 3. 문제의 본질**

* 헤드라인: “기술 문제가 아니라 업무 방식의 문제”
* 카피: “효율적이지 않은 프로세스가 너무 오래 당연시됨 → 근본적 혁신 필요”
* 비주얼: 무거운 톱니바퀴를 억지로 돌리는 사람 이미지

---

## Part 2. 첫 시도와 실패

**Slide 4. 첫 전략: 별도 AI 서비스**

* 헤드라인: “처음에는 별도의 AI 서비스를 만들려 했다”
* 카피:

  * 독립된 포털, 별도 UI 제공
  * 기존 SWDP와는 분리된 채널

---

**Slide 5. 왜 맞지 않았나**

* 헤드라인: “별도 서비스의 한계”
* 카피:

  * 업무 흐름 단절 → 사용자가 안 씀
  * 데이터 동기화 지연 & 이중화
  * 권한·보안체계 불일치
  * 운영 부담 증가
* 비주얼: SWDP ↔ 외부 서비스 사이에 ‘장애물(방화벽·권한·이중화)’ 아이콘

---

## Part 3. 방향 전환: SWDP 위의 AI

**Slide 6. 새로운 전략**

* 헤드라인: “SWDP 위에 AI 레이어를 얹는다”
* 카피: “기존 UX 유지, AI는 보이지 않게 백엔드에서 작동”
* 메시지: Zero Learning Curve

---

**Slide 7. 접근 원칙**

* 헤드라인: “기술보다 중요한 건 채택”
* 카피:

  * 사용자 학습 최소화
  * 기존 환경 그대로
  * 점진적 확장

---

## Part 4. PoC와 실제 적용 사례

**Slide 8. 주간보고 생성기**

* 헤드라인: “Jira 이슈 → 자동 주간보고”
* 카피: 기존: 매주 사람이 수작업 → 이제는 자동화

---

**Slide 9. 릴리즈 노트 생성**

* 헤드라인: “Commit & 이슈 기록 → 릴리즈 노트 자동 생성”
* 카피: 단순 요약이 아니라 문서화 규격에 맞춰 자동화

---

**Slide 10. VOC 처리 자동화**

* 헤드라인: “반복되는 VOC, AI가 대신 답한다”
* 카피:

  * FAQ 자동 응답
  * 유사 질문 일관된 답변
  * 할루시네이션 개선 → 카테고리 선택 + Clarification UX

---

**Slide 11. API 가이드봇**

* 헤드라인: “Swagger 문서 → 대화형 API 가이드”
* 카피: “문서 대신 질문으로 API를 바로 확인”

---

**Slide 12. 메뉴 트리 안내**

* 헤드라인: “방대한 메뉴 구조, AI가 개인화”
* 카피: DB와 연결해 맥락 있는 안내

---

**Slide 13. 경비 처리 도우미 (멀티모달)**

* 헤드라인: “영수증 이미지 → JSON 변환 → 제출”
* 카피: 사람 손이 하던 반복 단계를 AI가 대신 처리

---

## Part 5. 배운 점과 한계

**Slide 14. 운영적 제약**

* 헤드라인: “기술보다 큰 건 ‘운영 장벽’”
* 카피:

  * 내부망 호출 제한
  * API 쿼터 제약
  * 권한/보안 정책
* 메시지: AI는 이미 ‘할 수 있음’, 문제는 조직 운영

---

**Slide 15. 기술과 서비스의 간극**

* 헤드라인: “Framework ≠ Service”
* 카피: “기술 구현은 명확했지만, 서비스로 정착하려면 사용자 피드백이 필수”
* 비주얼: \[Framework] → (Gap: Feedback) → \[Service]

---

## Part 6. 내러티브 전환 (팅커벨)

**Slide 16. 팅커벨 이야기**

* 헤드라인: “박수가 있어야 살아나는 캐릭터”
* 카피: “피드백 없이는 코드 덩어리, 피드백이 있어야 도구가 된다”

---

**Slide 18. 우리의 관점**

* 헤드라인: “AI는 마법이 아니라 개발 도구”
* 카피: “Git, IDE, Compiler처럼 → AI는 기본 도구가 될 것”
* 비주얼: 개발자 툴박스 안의 AI 아이콘

---

## Part 7. 결과물과 부탁

**Slide 19. 결과물 소개**

* 헤드라인: “SWDP AI ChatOps v1.0”
* 카피: 지금까지의 시도와 결과물이 집약된 첫 버전
* 비주얼: 서비스 스크린샷

---

**Slide 20. 결론 & 부탁**

* 헤드라인: “기술은 우리가, 방향은 여러분이”
* 카피:

  * “한 번 써보고 불편한 점, 바로 알려주세요.”
  * “AI는 우리가, 서비스는 여러분이 함께 만들어갑니다.”
* 비주얼: 코드 아이콘 ↔ 사용자 아이콘, 양방향 화살표


ppt 만들어줘 